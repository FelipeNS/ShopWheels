/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopwheels;

import java.awt.event.KeyEvent;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.NumberFormat;
import java.util.Locale;


/**
 *
 * @author felipe
 */
public class Vender extends javax.swing.JInternalFrame {

    /**
     * Creates new form Vender
     */
    public Vender() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cmbCliente = new javax.swing.JComboBox();
        txtFuncionario = new javax.swing.JTextField();
        cmbCarro = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtProduto = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduto = new javax.swing.JTable();
        txtQTD = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnAdicionar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtValorReceb = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTroco = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblItens = new javax.swing.JTable();
        btnRemover = new javax.swing.JButton();
        txtValorTT = new javax.swing.JTextField();
        btnFinalizarVenda = new javax.swing.JButton();
        btnCancelarVenda = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Vender");
        setMaximumSize(new java.awt.Dimension(845, 690));
        setMinimumSize(new java.awt.Dimension(845, 690));
        setPreferredSize(new java.awt.Dimension(845, 690));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informações", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 255, 255)));
        jPanel1.setOpaque(false);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Cliente :");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Funcionário :");

        cmbCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClienteActionPerformed(evt);
            }
        });

        txtFuncionario.setEditable(false);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Carro :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbCarro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbCliente, 0, 233, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(16, 16, 16))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(6, 6, 823, 159);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Produtos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 255, 255)));
        jPanel3.setOpaque(false);

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Produto :");

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconPack/pesquisa.png"))); // NOI18N
        btnPesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        tblProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblProduto);

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Quantidade :");

        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconPack/adicionar.png"))); // NOI18N
        btnAdicionar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQTD, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtQTD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        getContentPane().add(jPanel3);
        jPanel3.setBounds(6, 174, 823, 223);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Carrinho", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 255, 255)));
        jPanel2.setOpaque(false);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Valor Total :");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Valor Recebido :");

        txtValorReceb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorRecebKeyPressed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Troco :");

        txtTroco.setEditable(false);

        tblItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblItens);

        btnRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconPack/remover.png"))); // NOI18N
        btnRemover.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        txtValorTT.setEditable(false);
        txtValorTT.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValorTT, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValorReceb, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTroco, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtTroco, txtValorReceb, txtValorTT});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel3)
                    .addComponent(txtValorReceb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtTroco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValorTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(6, 401, 823, 211);

        btnFinalizarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconPack/finalizarVenda.png"))); // NOI18N
        btnFinalizarVenda.setText("Finalizar Venda");
        btnFinalizarVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFinalizarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarVendaActionPerformed(evt);
            }
        });
        getContentPane().add(btnFinalizarVenda);
        btnFinalizarVenda.setBounds(687, 622, 132, 28);

        btnCancelarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconPack/cancelar.png"))); // NOI18N
        btnCancelarVenda.setText("Cancelar Venda");
        btnCancelarVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarVendaActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelarVenda);
        btnCancelarVenda.setBounds(534, 622, 136, 28);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backGrounds/Vender.png"))); // NOI18N
        jLabel5.setRequestFocusEnabled(false);
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 840, 670);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    Double valorTT = 0.0;
    Double valorItens = 0.0;
    String id;
    String nome;
    String descricao;
    String categoria;
    Double valor;
    int quantidadeEst;
    int quantidade;
    int idVenda;
    
    
// Criando modelo para tabela Itens   
    DefaultTableModel modeloI = new DefaultTableModel();
    
// Criando modelo para tabela Produtos
    DefaultTableModel modeloP = new DefaultTableModel();


public void tabelaProdutos(){
// Definindo modelo da tabela
    modeloP.addColumn("ID");
    modeloP.addColumn("NOME");
    modeloP.addColumn("DESCRIÇÃO");
    modeloP.addColumn("CATEGORIA");
    modeloP.addColumn("VALOR UNITARIO");
    modeloP.addColumn("QUANTIDADE EM ESTOQUE");
    tblProduto.setModel(modeloP);
         
}    
    
    
public void tabelaItens(){    
 // Definindo modelo da tabela Itens
    modeloI.addColumn("ID");
    modeloI.addColumn("NOME");
    modeloI.addColumn("DESCRIÇÃO");
    modeloI.addColumn("CATEGORIA");
    modeloI.addColumn("QUANTIDADE");
    modeloI.addColumn("VALOR");
    tblItens.setModel(modeloI);
     
}
   
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        
        // Colocando valores no ComboBox
            
        // Conectando no Banco    
            try {
                Connection conexao = ConexaoDB.abrir();
                
            // Executando comando MySQL
                Statement comando = conexao.createStatement();
                ResultSet resultado = comando.executeQuery("SELECT cli_id, cli_nome FROM cliente ORDER BY cli_nome");
            
            // Inserindo itens    
                while (resultado.next()) {
                    int idCli = resultado.getInt("cli_id");
                    String nomeCli = resultado.getString("cli_nome");
                    cmbCliente.addItem(idCli + "-" + nomeCli);
                }
            
            } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Combo Component Show Cliente " +e.getMessage());
        }
          
        // Desabilitar botões
            btnAdicionar.setEnabled(false);
            btnFinalizarVenda.setEnabled(false);
            btnRemover.setEnabled(false);
        
        // Pegando Nome do funcionário do login e colocando no campo de texto
            Login n1 = new Login();
            String nomeFun = n1.getNome();
            int idFun = n1.getId();
         
            txtFuncionario.setText(idFun + "-" + nomeFun);
            
        // Definindo modelo na tabela Itens    
            tabelaProdutos();
            
        // Definindo modelo na tabela Itens    
            tabelaItens(); 
            
    }//GEN-LAST:event_formComponentShown

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code here:
        
        String produto = txtProduto.getText();
        
        modeloP.setRowCount(0);
        
        // Conectando com o DB
            try {
                Connection conexaoDB = ConexaoDB.abrir();
                Statement comandoVen = conexaoDB.createStatement();
                ResultSet resultadoTbl = comandoVen.executeQuery("SELECT * FROM produto WHERE pro_nome LIKE '%" + produto +"%' OR pro_descricao LIKE '%" + produto + "%'");
        
        // Setando valores nas linhas da tabela    
            while (resultadoTbl.next()) {
                Object[] linha = new Object[6];
                linha[0] = resultadoTbl.getInt("pro_id");
                linha[1] = resultadoTbl.getString("pro_nome");
                linha[2] = resultadoTbl.getString("pro_descricao");
                linha[3] = resultadoTbl.getString("pro_categoria");
                linha[4] = resultadoTbl.getString("pro_valor");
                linha[5] = resultadoTbl.getString("pro_qtd_est");
                modeloP.insertRow(tblProduto.getRowCount(), linha);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Botão Pesquisar " +e.getMessage());
        }
        
        // Habilitar botão
            btnAdicionar.setEnabled(true);
 
            
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // TODO add your handling code here:
  
        // Pegando quantidade do produto
            quantidade = Integer.parseInt(txtQTD.getText());
        
        // Pegando dados da tabela Produtos
            if (tblProduto.getRowCount() > 0) {
                int linhaSelecionada = tblProduto.getSelectedRow();

                 id = tblProduto.getValueAt(linhaSelecionada, 0).toString();
                 nome = tblProduto.getValueAt(linhaSelecionada, 1).toString();
                 descricao = tblProduto.getValueAt(linhaSelecionada, 2).toString();
                 categoria = tblProduto.getValueAt(linhaSelecionada, 3).toString();
                 valor = Double.parseDouble(tblProduto.getValueAt(linhaSelecionada, 4).toString());
                 quantidadeEst = Integer.parseInt(tblProduto.getValueAt(linhaSelecionada, 5).toString());
            
            }
    
        // Verificando Quantidade dem estoque    
            if (quantidade <= quantidadeEst) {
                 valorItens = (quantidade * valor);

            // Setando valores nas linhas da tabela Itens   
                Object[] linha = new Object[6];
                linha[0] = id;
                linha[1] = nome;
                linha[2] = descricao;
                linha[3] = categoria;
                linha[4] = quantidade;
                linha[5] = valorItens;
                modeloI.insertRow(tblItens.getRowCount(), linha);
            
            // Campo Valor Total
                valorTT = (valorTT + valorItens);
                txtValorTT.setText(NumberFormat.getCurrencyInstance().format(valorTT));
               
            } else {
               JOptionPane.showMessageDialog(null, "Quantidade em estoque inferior à quantidade desejada");
            }
        
                
            // Habilitar botões
                btnFinalizarVenda.setEnabled(true);
                btnRemover.setEnabled(true);
            
            // Limpar campo de quantidade
                txtQTD.setText("");
                
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // TODO add your handling code here:
        
        if (tblItens.getRowCount() > 0) {
            int linhaSelecionada = tblItens.getSelectedRow(); 
            
            valor = Double.parseDouble(tblItens.getValueAt(linhaSelecionada, 5).toString());
            
            valorTT = (valorTT - valor);

            ((DefaultTableModel)tblItens.getModel()).removeRow(tblItens.getSelectedRow());
            
            txtValorTT.setText(NumberFormat.getCurrencyInstance().format(valorTT));
            
        }
       
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnCancelarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarVendaActionPerformed
        // TODO add your handling code here:
        
        // Limpar campos de textos
            limpar();
        
        // limpar Tabelas
            modeloI.setRowCount(0);
            modeloP.setRowCount(0);

    }//GEN-LAST:event_btnCancelarVendaActionPerformed

    private void btnFinalizarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarVendaActionPerformed
        // TODO add your handling code here:

        // Pegando id do carro
            String carro = cmbCarro.getSelectedItem().toString();
            String[] pegaIDCarro = carro.split("-");
            int fkCarro = Integer.parseInt(pegaIDCarro[0]);
        
        // Pegando id funcionário    
            String funcionario = txtFuncionario.getText();
            String[] pegaIDFun = funcionario.split("-");
            int fkFun = Integer.parseInt(pegaIDFun[0]);
        
        // Conectando no banco    
            try {
                Connection conexaoDB = ConexaoDB.abrir();
            
            // Executando comando MySQL para salvar venda no BD
                CallableStatement comandoVen = conexaoDB.prepareCall("INSERT INTO venda (ven_data, ven_valor, ven_fk_funcionario, ven_fk_carro) VALUES (now(),?,?,?)");
                comandoVen.setDouble(1, valorTT);
                comandoVen.setInt(2, fkFun);
                comandoVen.setInt(3, fkCarro);
                comandoVen.execute();
                
            // Executando comando MySQL para pegar id da venda
                Statement comandoVenID = conexaoDB.createStatement();
                ResultSet resultadoVen = comandoVenID.executeQuery("SELECT ven_id FROM venda WHERE ven_fk_funcionario=" + fkFun + " AND ven_fk_carro=" + fkCarro + " AND Day(ven_data)=Day(now()) AND Month(ven_data)=Month(now()) AND Year(ven_data)=Year(now()) AND ven_valor="+valorTT);
                while (resultadoVen.next()) {
                  idVenda = resultadoVen.getInt("ven_id");
                    
                }
                
            // Salvar itens no BD    
                
                    int linha = tblItens.getRowCount();
                
                // Salvar um de cada vez    
                    for (int i=0; i<linha; i++) {
                      String quantidadeI = tblItens.getValueAt(i, 4).toString();
                      String produto = tblItens.getValueAt(i, 1).toString();
                      String descricaoP = tblItens.getValueAt(i, 2).toString();
                      int idProduto = Integer.parseInt(tblItens.getValueAt(i, 0).toString());
                     
                // Executando comando MySQL para salvar itens no BD      
                    CallableStatement comandoIte = conexaoDB.prepareCall("INSERT INTO itensVend (ite_quantidade, ite_fk_produto, ite_fk_venda) VALUES (?,?,?)");
                    comandoIte.setString(1, quantidadeI);
                    comandoIte.setInt(2, idProduto);
                    comandoIte.setInt(3, idVenda);
                    comandoIte.execute();  
                      
                // Executando comando MySQL para diminuir quantidade de estoque do produto no BD
                    CallableStatement comandoPro = conexaoDB.prepareCall("UPDATE produto SET pro_qtd_est=pro_qtd_est-? WHERE pro_id=?");
                    comandoPro.setString(1, quantidadeI);
                    comandoPro.setInt(2, idProduto);
                    comandoPro.execute();           

                    }
                    
                

                JOptionPane.showMessageDialog(null, "Venda realizada com sucesso");
 
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Botao finalizar venda " + e.getMessage());
            
            }    
            
    // Limpar campos de textos
        limpar();
        
    // limpar Tabelas
        modeloI.setRowCount(0);
        modeloP.setRowCount(0);
            
    }//GEN-LAST:event_btnFinalizarVendaActionPerformed

    private void cmbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClienteActionPerformed
        // TODO add your handling code here:
        cmbCarro.removeAllItems();
        
        String cliente = cmbCliente.getSelectedItem().toString();
        String[] pegaID = cliente.split("-");
        int fkCliente = Integer.parseInt(pegaID[0]);
        
        // Colocando valores no ComboBox
            
        // Conectando no Banco    
            try {
                Connection conexao = ConexaoDB.abrir();
                
            // Executando comando MySQL
                Statement comando = conexao.createStatement();
                ResultSet resultado = comando.executeQuery("SELECT car_id, car_modelo FROM carro WHERE car_fk_cliente="+ fkCliente + " ORDER BY car_modelo");
            
            // Inserindo itens    
                while (resultado.next()) {
                    int idCar = resultado.getInt("car_id");
                    String modeloCar = resultado.getString("car_modelo");
                    cmbCarro.addItem(idCar + "-" + modeloCar);
                }
            
            } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Combo Component Show Carro " +e.getMessage());
        }
        
    }//GEN-LAST:event_cmbClienteActionPerformed

    private void txtValorRecebKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorRecebKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){    
            Double valorReceb = Double.parseDouble(txtValorReceb.getText());
            
            Double troco = (valorReceb - valorTT); 
            
            txtTroco.setText(NumberFormat.getCurrencyInstance().format(troco));
            
        }  
    }//GEN-LAST:event_txtValorRecebKeyPressed


private void limpar(){
// Limpando Campos e variáveis
    txtProduto.setText("");
    txtQTD.setText("");
    txtTroco.setText("");
    txtValorReceb.setText("");
    txtValorTT.setText("");
    valor = 0.0;
    valorItens = 0.0;
    valorTT = 0.0;
    tblProduto.setModel(modeloP);
    tblItens.setModel(modeloI);
    
}

        
     
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnCancelarVenda;
    private javax.swing.JButton btnFinalizarVenda;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JComboBox cmbCarro;
    private javax.swing.JComboBox cmbCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblItens;
    private javax.swing.JTable tblProduto;
    private javax.swing.JTextField txtFuncionario;
    private javax.swing.JTextField txtProduto;
    private javax.swing.JTextField txtQTD;
    private javax.swing.JTextField txtTroco;
    private javax.swing.JTextField txtValorReceb;
    private javax.swing.JTextField txtValorTT;
    // End of variables declaration//GEN-END:variables
}
