/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopwheels;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author felipe
 */
public class AlteraTelefone extends javax.swing.JInternalFrame {

    /**
     * Creates new form AlteraTelefone
     */
    public AlteraTelefone() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        cmbDDD = new javax.swing.JComboBox();
        txtNumero = new javax.swing.JTextField();
        cmbProprietario = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTelefone = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Alterar Telefone");
        setMaximumSize(new java.awt.Dimension(490, 427));
        setMinimumSize(new java.awt.Dimension(490, 427));
        setPreferredSize(new java.awt.Dimension(490, 427));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Telefone", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 255, 255)));
        jPanel1.setOpaque(false);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ID :");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("DDD :");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Número :");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Proprietario :");

        txtID.setEditable(false);

        cmbDDD.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "11", "12", "13", "14", "15", "16", "17", "18", "19", "21", "22", "24", "27", "28", "31", "32", "33", "34", "35", "37", "38", "41", "42", "43", "44", "45", "46", "47", "48", "49", "51", "53", "54", "55", "61", "62", "63", "64", "65", "66", "67", "68", "69", "71", "73", "74", "75", "77", "79", "81", "82", "83", "84", "85", "86", "87", "88", "89", "91", "92", "93", "94", "95", "96", "97", "98", "99" }));
        cmbDDD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        cmbProprietario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmbDDD, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbProprietario, 0, 180, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbDDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cmbProprietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(6, 6, 468, 154);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ações", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 255, 255)));
        jPanel2.setOpaque(false);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconPack/salvar.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconPack/cancelar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconPack/alterar.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconPack/excluir.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnCancelar)
                    .addComponent(btnExcluir)
                    .addComponent(btnAlterar))
                .addGap(40, 40, 40))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(6, 162, 452, 73);

        tblTelefone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblTelefone);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(6, 241, 468, 146);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backGrounds/AlterarTelefone.png"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 480, 393);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        
        
        // Colocando valores no ComboBox
            
        // Conectando no Banco    
            try {
                Connection conexao = ConexaoDB.abrir();
                
            // Executando comando MySQL
                Statement comando = conexao.createStatement();
                ResultSet resultado = comando.executeQuery("SELECT cli_id, cli_nome FROM cliente ORDER BY cli_nome");
            
            // Inserindo itens    
                while (resultado.next()) {
                    int id = resultado.getInt("cli_id");
                    String nome = resultado.getString("cli_nome");
                    cmbProprietario.addItem(id + "-" + nome);
                }
            
            } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Combo Component Show " +e.getMessage());
        }
            
        // Atualizar tabela
            atualizarTabela();
        
        // Desabilitar campos
            desabilitar();
            
        // Desabilitar botões
            btnCancelar.setEnabled(false);
            btnSalvar.setEnabled(false);
               
    }//GEN-LAST:event_formComponentShown

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // TODO add your handling code here:
        
        
        // Pegando dados da tabela
            if (tblTelefone.getRowCount() > 0) {
                int linhaSelecionada = tblTelefone.getSelectedRow();
            
            // Guardando valores pegos
                String id = tblTelefone.getValueAt(linhaSelecionada, 0).toString();
                String ddd = tblTelefone.getValueAt(linhaSelecionada, 1).toString();
                String numero = tblTelefone.getValueAt(linhaSelecionada, 2).toString();
                String cliente = tblTelefone.getValueAt(linhaSelecionada, 3).toString();
                
            // Pegando id do cliente
            // Conectando no Banco
                try {
                    Connection conexao = ConexaoDB.abrir();
                    
                // Executando comando MySQL    
                    Statement comando = conexao.createStatement();
                    ResultSet resultado = comando.executeQuery("SELECT cli_id, cli_nome FROM cliente ORDER BY cli_nome");
                
                // Colocando resultado em variáveis    
                    while (resultado.next()) {
                        int idCli = resultado.getInt("cli_id");
                        String nome = resultado.getString("cli_nome");
                
                // Verificando igualdade entre resultados        
                    if (nome.equals(cliente)) {
                        String nomeCli;
                        nomeCli = (idCli + "-" + cliente) ;
                
                    // Colocando item na Combo Box    
                        cmbProprietario.setSelectedItem(nomeCli);
                        
                    }
                }
            
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Botão Alterar " +e.getMessage());
                }

            // Colocando informações nos campos    
                txtID.setText(id);
                txtNumero.setText(numero);
                cmbDDD.setSelectedItem(ddd);
            // Habilitar campos para editar   
                habilitar();
                
            // Habilitar botões
                btnCancelar.setEnabled(true);
                btnSalvar.setEnabled(true);
            
            // Desabilitar botões
                btnExcluir.setEnabled(false);
                btnAlterar.setEnabled(false);
        
        }
              
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        
        if (tblTelefone.getRowCount() > 0) {
            if (JOptionPane.showConfirmDialog(null, "Deseja realmente excluir")== JOptionPane.OK_OPTION) {
                int linhaSelecionada = tblTelefone.getSelectedRow();
                String id = tblTelefone.getValueAt(linhaSelecionada, 0).toString();
            
        // Conectando no Banco        
            try {
                Connection conexao = ConexaoDB.abrir();
                
            // Executando comando MySQL    
                CallableStatement comando = conexao.prepareCall("DELETE FROM telefone WHERE tel_id=?");
                comando.setInt(1, Integer.parseInt(id));
                comando.execute();
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Botao excluir " +e.getMessage());
            
            }
            
        }
        }
        
        // Atualizar tabela
            atualizarTabela();
         
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        
        // Declarando variáveis
            String id = txtID.getText();
            String numero = txtNumero.getText();
            String cliente = cmbProprietario.getSelectedItem().toString();
            String ddd = cmbDDD.getSelectedItem().toString();
            
        // Pegando id do cliente    
            String[] pegaIDCli = cliente.split("-");
            int idCli = Integer.parseInt(pegaIDCli[0]);
            
        
        // Salvando na tabela do BD
            if (!"".equals(numero)){
        
        // Conectando no banco    
            try {
                Connection conexao = ConexaoDB.abrir();
            
            // Executando comando MySQL
                CallableStatement comandoTel = conexao.prepareCall("UPDATE telefone SET tel_ddd=?, tel_numero=?, tel_fk_cliente=? WHERE tel_id=?");
                comandoTel.setString(1, ddd);
                comandoTel.setString(2, numero);
                comandoTel.setInt(3, idCli);
                comandoTel.setString(4, id);
                comandoTel.execute();
                
                JOptionPane.showMessageDialog(null, "Alterado com sucesso");
        
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Botão salvar" + e.getMessage());
            
            }
            }else{
                JOptionPane.showMessageDialog(null, "Prencha todos os campos!");   
            }
        
    // Limpar campos    
        limpar();
    
    // Desabilitar campos
        desabilitar();
    
    // Desabilitar botões
        btnSalvar.setEnabled(false);
        btnCancelar.setEnabled(false);
    
    // Habilitar botões
        btnExcluir.setEnabled(true);
        btnAlterar.setEnabled(true);
    
    // Atualizar tabela
        atualizarTabela();
        
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        
        // Limpar campos
            limpar();
        
        // Desabilitar campos para edição
            desabilitar();
        
        // Desabilitar botões
            btnCancelar.setEnabled(false);
            btnSalvar.setEnabled(false);
            
        // Habilitar botões
            btnExcluir.setEnabled(true);
            btnAlterar.setEnabled(true);
            
    }//GEN-LAST:event_btnCancelarActionPerformed

    
public void atualizarTabela(){
    
    // Definindo modelo da tabela
    DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("DDD");
        modelo.addColumn("NUMERO");
        modelo.addColumn("PROPRIETARIO");
        tblTelefone.setModel(modelo);
       
    // Conectando com o DB
        try {
            Connection conexaoDB = ConexaoDB.abrir();
            
        // Executando comando MySQL    
            Statement comandoFun = conexaoDB.createStatement();
            ResultSet resultadoTbl = comandoFun.executeQuery("SELECT tel_id, cli_nome, tel_ddd, tel_numero, tel_fk_cliente FROM telefone INNER JOIN cliente ON tel_fk_cliente=cli_id");
        
        // Setando valores nas linhas da tabela    
            while (resultadoTbl.next()) {
                Object[] linha = new Object[4];
                linha[0] = resultadoTbl.getInt("tel_id");
                linha[1] = resultadoTbl.getString("tel_ddd");
                linha[2] = resultadoTbl.getString("tel_numero");
                linha[3] = resultadoTbl.getString("tel_fk_cliente");
                modelo.insertRow(tblTelefone.getRowCount(), linha);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Atualizar tabela" +e.getMessage());
        }   
}    


public void desabilitar(){
  // Desabilitar campos para edições
      txtNumero.setEditable(false);
      cmbProprietario.setEnabled(false);
      cmbDDD.setEnabled(false);
}


public void habilitar(){
  // Habilitar campos para edições
      txtNumero.setEditable(true);
      cmbProprietario.setEnabled(true);
      cmbDDD.setEnabled(true);
}


public void limpar(){
  // Limpar campos  
      txtID.setText("");
      txtNumero.setText("");
      cmbProprietario.setSelectedIndex(0);
      cmbDDD.setSelectedIndex(0);
}        
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cmbDDD;
    private javax.swing.JComboBox cmbProprietario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTelefone;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNumero;
    // End of variables declaration//GEN-END:variables
}
