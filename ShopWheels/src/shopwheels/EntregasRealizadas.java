/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopwheels;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author felipe
 */
public class EntregasRealizadas extends javax.swing.JInternalFrame {

    /**
     * Creates new form EntregasRealizadas
     */
    public EntregasRealizadas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEntregaHoje = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEntregaMes = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblEntregaAno = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Entregas Realizadas");
        setMaximumSize(new java.awt.Dimension(765, 345));
        setMinimumSize(new java.awt.Dimension(765, 345));
        setPreferredSize(new java.awt.Dimension(765, 345));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(null);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel1.setOpaque(false);

        tblEntregaHoje.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblEntregaHoje);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Hoje", jPanel1);

        jPanel2.setOpaque(false);

        tblEntregaMes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblEntregaMes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Mês", jPanel2);

        jPanel3.setOpaque(false);

        tblEntregaAno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tblEntregaAno);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ano", jPanel3);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(13, 5, 730, 300);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backGrounds/EntregaRealizadas.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 760, 320);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        
        // Atualizar tabelas
            atualizarTabelaHoje();
            atualizarTabelaMes();
            atualizarTabelaAno();
            
    }//GEN-LAST:event_formComponentShown

    
public void atualizarTabelaHoje(){
    
// Definindo modelo da tabela
    DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("LOGRADOURO");
        modelo.addColumn("NUMERO");
        modelo.addColumn("BAIRRO");
        modelo.addColumn("CIDADE");
        modelo.addColumn("CEP");
        modelo.addColumn("ENTREGADOR");
        modelo.addColumn("CARRO");
        modelo.addColumn("DESTINATÁRIO");
        modelo.addColumn("OBSERVAÇÃO");
        modelo.addColumn("DATA DE ENTREGA");
        tblEntregaHoje.setModel(modelo);

        
    // Conectando com o DB
        try {
            Connection conexaoDB = ConexaoDB.abrir();
            Statement comandoEnt = conexaoDB.createStatement();
            ResultSet resultadoTbl = comandoEnt.executeQuery("SELECT ent_id, ent_logradouro, ent_numero, ent_bairro, ent_cidade, ent_cep, fun_nome, car_modelo, ent_pessoa, ent_obs, ent_dataEnt FROM entrega INNER JOIN funcionario ON ent_fk_funcionario=fun_id INNER JOIN carro ON ent_fk_carro=car_id WHERE ent_status='Entregue' AND Day(ent_dataEnt)=Day(now()) AND Month(ent_dataEnt)=Month(now()) AND Year(ent_dataEnt)=Year(now())");
        
        // Setando valores nas linhas da tabela    
            while (resultadoTbl.next()) {
                Object[] linha = new Object[11];
                linha[0] = resultadoTbl.getInt("ent_id");
                linha[1] = resultadoTbl.getString("ent_logradouro");
                linha[2] = resultadoTbl.getString("ent_numero");
                linha[3] = resultadoTbl.getString("ent_bairro");
                linha[4] = resultadoTbl.getString("ent_cidade");
                linha[5] = resultadoTbl.getString("ent_cep");
                linha[6] = resultadoTbl.getString("fun_nome");
                linha[7] = resultadoTbl.getString("car_modelo");
                linha[8] = resultadoTbl.getString("ent_pessoa");
                linha[9] = resultadoTbl.getString("ent_obs");
                linha[10] = resultadoTbl.getDate("ent_dataEnt");
                modelo.insertRow(tblEntregaHoje.getRowCount(), linha);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Atualizar tabela Hoje " +e.getMessage());
        }
        
}       


public void atualizarTabelaMes(){
       
// Definindo modelo da tabela
    DefaultTableModel modeloMes = new DefaultTableModel();
    modeloMes.addColumn("ID");
    modeloMes.addColumn("LOGRADOURO");
    modeloMes.addColumn("NUMERO");
    modeloMes.addColumn("BAIRRO");
    modeloMes.addColumn("CIDADE");
    modeloMes.addColumn("CEP");
    modeloMes.addColumn("ENTREGADOR");
    modeloMes.addColumn("CARRO");
    modeloMes.addColumn("DESTINATÁRIO");
    modeloMes.addColumn("OBSERVAÇÃO");
    modeloMes.addColumn("DATA DE ENTREGA");
    tblEntregaMes.setModel(modeloMes);
        
        // Conectando com o DB
        try {
            Connection conexaoDB = ConexaoDB.abrir();
            Statement comandoEnt = conexaoDB.createStatement();
            ResultSet resultadoTbl = comandoEnt.executeQuery("SELECT ent_id, ent_logradouro, ent_numero, ent_bairro, ent_cidade, ent_cep, fun_nome, car_modelo, ent_pessoa, ent_obs, ent_dataEnt FROM entrega INNER JOIN funcionario ON ent_fk_funcionario=fun_id INNER JOIN carro ON ent_fk_carro=car_id WHERE ent_status='Entregue' AND Month(ent_dataEnt)=Month(now()) AND Year(ent_dataEnt)=Year(now())");
        
        // Setando valores nas linhas da tabela    
            while (resultadoTbl.next()) {
                Object[] linhaMes = new Object[11];
                linhaMes[0] = resultadoTbl.getInt("ent_id");
                linhaMes[1] = resultadoTbl.getString("ent_logradouro");
                linhaMes[2] = resultadoTbl.getString("ent_numero");
                linhaMes[3] = resultadoTbl.getString("ent_bairro");
                linhaMes[4] = resultadoTbl.getString("ent_cidade");
                linhaMes[5] = resultadoTbl.getString("ent_cep");
                linhaMes[6] = resultadoTbl.getString("fun_nome");
                linhaMes[7] = resultadoTbl.getString("car_modelo");
                linhaMes[8] = resultadoTbl.getString("ent_pessoa");
                linhaMes[9] = resultadoTbl.getString("ent_obs");
                linhaMes[10] = resultadoTbl.getDate("ent_dataEnt");
                modeloMes.insertRow(tblEntregaMes.getRowCount(), linhaMes);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Atualizar tabela Mes " +e.getMessage());
        }

}


public void atualizarTabelaAno(){

// Definindo modelo da tabela
    DefaultTableModel modeloAno = new DefaultTableModel();
        modeloAno.addColumn("ID");
        modeloAno.addColumn("LOGRADOURO");
        modeloAno.addColumn("NUMERO");
        modeloAno.addColumn("BAIRRO");
        modeloAno.addColumn("CIDADE");
        modeloAno.addColumn("CEP");
        modeloAno.addColumn("ENTREGADOR");
        modeloAno.addColumn("CARRO");
        modeloAno.addColumn("DESTINATÁRIO");
        modeloAno.addColumn("OBSERVAÇÃO");
        modeloAno.addColumn("DATA DE ENTREGA");
        tblEntregaAno.setModel(modeloAno);    
        
        // Conectando com o DB
        try {
            Connection conexaoDB = ConexaoDB.abrir();
            Statement comandoEnt = conexaoDB.createStatement();
            ResultSet resultadoTbl = comandoEnt.executeQuery("SELECT ent_id, ent_logradouro, ent_numero, ent_bairro, ent_cidade, ent_cep, fun_nome, car_modelo, ent_pessoa, ent_obs, ent_dataEnt FROM entrega INNER JOIN funcionario ON ent_fk_funcionario=fun_id INNER JOIN carro ON ent_fk_carro=car_id WHERE ent_status='Entregue' AND Year(ent_dataEnt)=Year(now())");
        
        // Setando valores nas linhas da tabela    
            while (resultadoTbl.next()) {
                Object[] linhaAno = new Object[11];
                linhaAno[0] = resultadoTbl.getInt("ent_id");
                linhaAno[1] = resultadoTbl.getString("ent_logradouro");
                linhaAno[2] = resultadoTbl.getString("ent_numero");
                linhaAno[3] = resultadoTbl.getString("ent_bairro");
                linhaAno[4] = resultadoTbl.getString("ent_cidade");
                linhaAno[5] = resultadoTbl.getString("ent_cep");
                linhaAno[6] = resultadoTbl.getString("fun_nome");
                linhaAno[7] = resultadoTbl.getString("car_modelo");
                linhaAno[8] = resultadoTbl.getString("ent_pessoa");
                linhaAno[9] = resultadoTbl.getString("ent_obs");
                linhaAno[10] = resultadoTbl.getDate("ent_dataEnt");
                modeloAno.insertRow(tblEntregaAno.getRowCount(), linhaAno);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Atualizar tabela Ano " +e.getMessage());
        }
        
}    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblEntregaAno;
    private javax.swing.JTable tblEntregaHoje;
    private javax.swing.JTable tblEntregaMes;
    // End of variables declaration//GEN-END:variables
}
